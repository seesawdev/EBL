type Post {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  published: Boolean! @default(value: false)
  title: String!
  info: String!
  content: String!
  author: User!
}

type User {
  id: ID! @id
  startDate: DateTime! @startDate
  auth0id: String! @unique
  eblID: String! @unique
  profileStatus: ProfileStatus @default(value: PUBLIC)
  profilePic: String
  goals: [Goal] @relation(name: "UserToGoals")
  userInfo: FormData! @relation(link: INLINE)
  password: String!
  journal: [JournalEntry] @relation(name: "UserJournal")
  points: Int! @default(value: 0)
  friends: [User!]! @relation(name: "FriendsOfUser", link: TABLE)
  status: UserStatus @default(value: OFFLINE)  
  posts: [Post!]!
  following: [User] @relation(name: "FollowingUsers", link: TABLE)
  tier: TIER! @default(value: FREE)
  
}

enum TIER {
  FREE
  CONTRIBUTER
  PREMIUM
}

type Goal {
  id: ID! @id
  title: String!
  startDate: DateTime!
  projectedCompletionDate: DateTime!
  actualCompletionDate: DateTime!
  pointsWorth: Int!
  pointsEarned: Int!
  pointsDeducted: Int!
  description: String!
  author: User! @relation(name: "UserToGoals", link: INLINE)
}

enum UserStatus {
  ONLINE
  UNAVAILABLE
  OFFLINE
}
enum ProfileStatus {
  PUBLIC
  PRIVATE
  FRIENDSONLY
  DEACTIVATED
}
type JournalEntry {
  id: ID! @id
  createdAt: DateTime! @createdAt
  title: String!
  shared: Boolean! @default(value: false)
  content: String!
  author: User! @relation(name: "UserJournal", link: INLINE)
}

type FormData {
  id: ID! @id
  createdAt: DateTime! @createdAt
  email: String! @unique
  name: String! 
  username: String! @unique
  Q1: String
  Q2: String
  Q3: String
  Q4: Question @default(value: CHOICE1)
}

enum Question {
  CHOICE1
  CHOICE2
  CHOICE3
  CHOICE4
}